x=1
prok_abondance_taxo <- read.table("data/Prok_abondance_taxo.csv", sep=";",dec=".", head=T)
chem <- read.table("data/chem.csv", sep=";",dec=".", head=T)
source("Rcodes/DESeq_OTU_prok2017.R")
euk_p <- prop.table(as.matrix(t(euk_sort1)),1)
euk_p_chem <- data.frame(cond, chem_mean$Lake, chem_mean$Season, euk_p)
colnames(euk_p_chem) <- c("cond", "lake", "season", rownames(euk_sort))
euk_agg <- aggregate(euk_p_chem[,c(4:ncol(euk_p_chem))], by=list(euk_p_chem$season, euk_p_chem$lake), FUN="mean")
euk_aggbb <- euk_agg
ab_IC <- vector()
for (i in 1:nrow(seasonres))
{
ab_IC[i] <- mean(euk_agg[c(2,4,6,8),which(colnames(euk_agg)==seasonres$OTU[i])])
}
ab_OW <- vector()
for (i in 1:nrow(seasonres))
{
ab_OW[i] <- mean(euk_agg[c(1,3,5,7),which(colnames(euk_agg)==seasonres$OTU[i])])
}
ab_comp <- vector()
dummy <- vector()
for (i in 1:nrow(seasonres))
{
if (ab_IC[i] < ab_OW[i]) {ab_comp[i] <- 1}
else if (ab_OW[i] < ab_IC[i]) {ab_comp[i] <- 2}
else {ab_comp[i] <- 0}
dummy[i] <- 1
}
seasonres2 <- data.frame(seasonres, ab_IC, ab_OW, ab_comp,dummy)
seasonres2$log2Foldchange <- as.numeric(as.character(seasonres2$log2Foldchange))
colnames(seasonres2) <- c(colnames(seasonres), "ab_IC", "ab_OW", "ab_comp","dummy")
### results data.frame at species level ###
euk_genus <- aggregate(prok_abondance_taxo[,10:ncol(prok_abondance_taxo)], by=list(prok_abondance_taxo$taxo3, prok_abondance_taxo$taxo6,
prok_abondance_taxo$taxo7), FUN="sum")
v <- c(1:nrow(euk_genus))
euk_genus <- data.frame(v, euk_genus)
euk_sort <- euk_genus[,match(chem_mean$`chem17$ID`,colnames(euk_genus))]
euk_sort_p <- prop.table(as.matrix(t(euk_sort)),1)
euk_sort_p_chem <- data.frame(cond, chem_mean$Lake, chem_mean$Season, euk_sort_p)
colnames(euk_sort_p_chem) <- c("cond", "lake", "season", v)
euk_agg <- aggregate(euk_sort_p_chem[,4:ncol(euk_sort_p_chem)], by=list(euk_sort_p_chem$season, euk_sort_p_chem$lake), FUN="mean")
ab_low <- vector()
for (i in 1:nrow(seasonagg))
{
a <- euk_genus$v[which(euk_genus$Group.1==as.character(seasonagg$Group.1[i])&euk_genus$Group.2==as.character(seasonagg$Group.2[i])&euk_genus$Group.3==as.character(seasonagg$Group.3[i]))]
ab_low[i] <- mean(euk_agg[c(2,4,6,8),which(colnames(euk_agg)==a)])
}
ab_high <- vector()
for (i in 1:nrow(seasonagg))
{
a <- euk_genus$v[which(euk_genus$Group.1==as.character(seasonagg$Group.1[i])&euk_genus$Group.2==as.character(seasonagg$Group.2[i])&euk_genus$Group.3==as.character(seasonagg$Group.3[i]))]
ab_high[i] <- mean(euk_agg[c(1,3,5,7),which(colnames(euk_agg)==a)])
}
seasonagg2 <- data.frame(seasonagg, ab_low, ab_high)
seasonagg2$x<- as.numeric(as.character(seasonagg$x))
colnames(seasonagg2) <- c(colnames(seasonagg), "ab_low", "ab_high")
#for ice-cover
high_IC <- subset(seasonres2, subset=seasonres2$log2Foldchange>0, select=colnames(seasonres2))
high_ICagg2 <- aggregate(high_IC$log2Foldchange, by=list(high_IC$Phylum, high_IC$Class, high_IC$Genus), FUN="sum")
high_ICagg3 <- aggregate(high_IC$log2Foldchange, by=list(high_IC$Phylum, high_IC$Class), FUN="sum")
pp <- vector()
for (i in 1:nrow(high_ICagg3)){pp[i] <- (high_ICagg3$x[i]/sum(high_ICagg3$x))*100}
high_res <- data.frame(high_ICagg3, pp)
#for open water
high_OW <- subset(seasonres2, subset=seasonres2$log2Foldchange<0, select=colnames(seasonres2))
high_OWagg2 <- aggregate(high_OW$log2Foldchange, by=list(high_OW$Phylum, high_OW$Class, high_OW$Genus), FUN="sum")
high_OWagg3 <- aggregate(high_OW$log2Foldchange, by=list(high_OW$Phylum, high_OW$Class), FUN="sum")
pp <- vector()
for (i in 1:nrow(high_OWagg3)){pp[i] <- (high_OWagg3$x[i]/sum(high_OWagg3$x))*100}
high_res <- data.frame(high_OWagg3, pp)
#Phylum for IC OW L2FC
#alphaproteo, Bacteroidetes, betaproteo, cyano, deltaproteo, gammaproteo, Planctomycetes, verrucomicrobia, others
a <- rev(c(17,17,22,0,0.5,12.8,8.5,12.8,9.4)) #IC
b <- rev(c(15.6,14,13.4,9.6,10.1,2.5,9.65,11.9,13.25)) #OW
col <- rev(c("purple","dark green","aquamarine2","navy", "light blue", "orange", "red","black","gray65"))
png(file="images/Rplot002.png", width=5, height=6, units="cm", pointsize=10, res=500)
par(mar=c(2,2,2,2))
barplot(as.matrix(data.frame(a,b)), col=col, las=1, names.arg=c("", ""),
cex.axis=0.6, cex.names=0.6)
mtext(side=1, line=0, text="IC", at=0.7, cex=0.6)
mtext(side=1, line=0, text="OW", at=1.917, cex=0.6)
dev.off()
### heatmap ###
library(graphicsutils)
## select all SIGNIFICANT DESeq
chosenOTU <- vector()
chosenPhylum <- vector()
for (i in 1:nrow(seasonres))
{
chosenOTU[i] <- which(colnames(euk_aggbb)==seasonres[i,1])
if (seasonres$Phylum[i]=="Spirochaetes"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Acidobacteria"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Armatimonadetes"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Actinobacteria"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Gemmatimonadetes"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Margulisbacteria"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Dependentiae"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Chloroflexi"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Chlamydiae"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Unclassified"){chosenPhylum[i] <- "Others"}
else if (seasonres$Phylum[i]=="Firmicutes"){chosenPhylum[i] <- "Others"}
else {chosenPhylum[i] <- as.character(seasonres$Phylum[i])}
}
for (i in 1:length(chosenPhylum)) ## this cause "unclassified" to appear in the vector
{
if (chosenPhylum[i]=="Proteobacteria") {chosenPhylum[i] <- as.character(seasonres$Class[i])}
else {chosenPhylum[i] <- chosenPhylum[i] }
}
## colors from phylum
love <- as.matrix(euk_aggbb[c(1,2,7,8,3,4,5,6),c(chosenOTU)])
rownames(love) <- c("LCR-OW","LCR-IC","LSC-OW","LSC-IC","LSA-OW","LSA-IC","LCL-OW","LCL-IC")
################## Figure ##################
library(ComplexHeatmap)
library(vegan)
library(dendsort)
library(circlize)
col_fun = colorRamp2(c(0, 0.005, 0.01, 0.05,0.1), c("bisque", "orange","chocolate","dark red","black"))
seasons <- rowAnnotation(Period=c("open","ice","open","ice","open","ice","open","ice"),
col=list(Period=c("ice"="blue", "open"="red")),
border=TRUE, annotation_legend_param=list(border="black"),
show_annotation_name=FALSE, show_legend=FALSE)
phyl <- HeatmapAnnotation(Phylum=chosenPhylum, col=list(Phylum=c("Alphaproteobacteria"="purple",
"Bacteroidetes"="dark green",
"Betaproteobacteria"="aquamarine2",
"Cyanobacteria"="navy",
"Deltaproteobacteria"="light blue",
"Gammaproteobacteria"="orange",
"Unclassified"="gray65", ## this is the unclassified proteobacteria
"Others"="gray65",
"Planctomycetes"="dark red",
"Verrucomicrobia"="black")),
show_annotation_name=FALSE, show_legend=FALSE)
reads <- Legend(title="Reads (%)", labels=rev(c("0","0.5","1","5","10")), at=c(0,0.005,0.01,0.05,0.1),
border="gray12",legend_gp=gpar(fill=col_fun(rev(c(0,0.005,0.01,0.05,0.1)))))
seasons_leg <- Legend(title="Period", labels=c("Ice-cover","Open-water"), at=c(1,2),
border="gray12",legend_gp=gpar(fill=c("blue","red")))
phyl_leg <- Legend(title="Phylum", labels=c("Alphaproteobacteria","Bacteroidetes",
"Betaproteobacteria","Cyanobacteria","Deltaproteobacteria","Gammaproteobacteria",
"Planctomycetes","Verrucomicrobia","Others"),
at=c(1:8),border="gray12", legend_gp=gpar(fill=c("purple", "dark green", "aquamarine2","navy","light blue",
"orange", "dark red", "black", "gray65")))
dendcol = dendsort(hclust(vegdist(t(love)), method="ward.D2"))
dendrow = dendsort(hclust(vegdist(love), method="ward.D2"))
ht <-Heatmap(love, column_dend_side="top",column_labels=rep("", ncol(love)), col=col_fun,
row_title=NULL, column_title=NULL, row_split=2, column_split=3,
show_heatmap_legend=FALSE, top_annotation=phyl, left_annotation=seasons,
cluster_rows=dendrow, cluster_columns=dendcol)
Objet <- packLegend(phyl_leg,reads,seasons_leg,row_gap = unit(0.6,"cm"))
png(file="images/16Sseas.png", width=17, height=12, units="cm", pointsize=11, res=500)
draw(ht, annotation_legend_list=Objet)
dev.off()
source("Rcodes/rect_heatmap_16S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_16S_cond_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_cond_L2FC_2017.R")
library(magick)
#ressources: https://cran.r-project.org/web/packages/magick/vignettes/intro.html#Read_and_write
prokseas <- image_read("images/16Sseas.png")
eukseas <- image_read("images/18Sseas.png")
eukseas <-image_annotate(eukseas, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokseas <-image_annotate(prokseas, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukseas,prokseas)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure7_Fournier.jpeg", format="jpeg")
#vertical
#img <- c(eukseas,prokseas)
#img <- image_scale(img, "3000x1333")
#tiger <- image_append(img, stack=TRUE)
#image_write(tiger, path="C:/Users/Isaza/Documents/Rplot002.png", format="png")
prokcond <- image_read("images/16Scond.png")
eukcond <- image_read("images/18Scond.png")
eukcond  <-image_annotate(eukcond, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokcond<-image_annotate(prokcond, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukcond,prokcond)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure6_Fournier.jpeg", format="jpeg")
source("Rcodes/rect_heatmap_16S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_16S_cond_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_cond_L2FC_2017.R")
library(magick)
#ressources: https://cran.r-project.org/web/packages/magick/vignettes/intro.html#Read_and_write
prokseas <- image_read("images/16Sseas.png")
eukseas <- image_read("images/18Sseas.png")
eukseas <-image_annotate(eukseas, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokseas <-image_annotate(prokseas, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukseas,prokseas)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure7_Fournier.jpeg", format="jpeg")
#vertical
#img <- c(eukseas,prokseas)
#img <- image_scale(img, "3000x1333")
#tiger <- image_append(img, stack=TRUE)
#image_write(tiger, path="C:/Users/Isaza/Documents/Rplot002.png", format="png")
prokcond <- image_read("images/16Scond.png")
eukcond <- image_read("images/18Scond.png")
eukcond  <-image_annotate(eukcond, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokcond<-image_annotate(prokcond, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukcond,prokcond)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure6_Fournier.jpeg", format="jpeg")
source("Rcodes/DESeq_OTU_euk2017.R")
source("Rcodes/DESeq_OTU_euk2017.R")
source("Rcodes/rect_heatmap_16S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_16S_cond_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_seas_L2FC_2017.R")
source("Rcodes/rect_heatmap_18S_cond_L2FC_2017.R")
library(magick)
#ressources: https://cran.r-project.org/web/packages/magick/vignettes/intro.html#Read_and_write
prokseas <- image_read("images/16Sseas.png")
eukseas <- image_read("images/18Sseas.png")
eukseas <-image_annotate(eukseas, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokseas <-image_annotate(prokseas, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukseas,prokseas)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure7_Fournier.jpeg", format="jpeg")
#vertical
#img <- c(eukseas,prokseas)
#img <- image_scale(img, "3000x1333")
#tiger <- image_append(img, stack=TRUE)
#image_write(tiger, path="C:/Users/Isaza/Documents/Rplot002.png", format="png")
prokcond <- image_read("images/16Scond.png")
eukcond <- image_read("images/18Scond.png")
eukcond  <-image_annotate(eukcond, "A. 18S", size=80, gravity="northwest", location="+110+100", color="black")
prokcond<-image_annotate(prokcond, "B. 16S", size=80, gravity="northwest", location="+110+100", color="black")
img <- c(eukcond,prokcond)
img <- image_scale(img, "3000x1333")
tiger <- image_append(img)
image_write(tiger, path="images/Figure6_Fournier.jpeg", format="jpeg")
